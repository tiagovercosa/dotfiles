# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# mod key (Alt=Mod1, Super=Mod4)
set $mod Mod4
set $term kitty

exec --no-startup-id xrandr --output XWAYLAND0 --primary
exec --no-startup-id systemctl --user import-enviroment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec --no-startup-id dbus-update-activation-enviroment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec --no-startup-id nm-applet --indicator
exec --no-startup-id dunst
exec --no-startup-id dropbox


# ----- INPUT
#input * accel_profile flat
#input * xkb_numlock enable
input type:keyboard xkb_layout br
input type:touchpad natural_scroll enabled
input type:touchpad tap enabled

### Output configuration
output eDP-1 bg ${HOME}/images/wallpaper/0318.png fill
output HDMI-A-1 bg ${HOME}/images/wallpaper/0102.jpg fill

# configuration Monitor:
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 res 1920x1080 pos 0 0
output HDMI-A-1 res 1920x1080 pos 1920 0
# output HDMI-A-1 transform 90
focus output eDP-1

# colors
set $darker   #080910
set $dark     #181920
set $black    #2F343F
set $darkgray #3B4252
set $gray     #E7E8EB
set $white    #F5F6F7
set $red      #BF616A
set $orange   #DBAB6B
set $yellow   #EBCB8B
set $green    #A3BE8C
set $cyan     #88C0D0
set $blue     #91B1D1
set $darkblue #416181
set $purple   #B48EAD

# icons

# editor       
# menu         
# document     
# table        
# code         
# chat         
# news         
# monitor      
# firefox      
# chrome       
# terminal     
# window       
# github       
# whatsapp     
# telegram     
# hangout      
# bank         
# folder       
# package      

set $ico_bank     <span font='Font Awesome'>&#xf155;</span>
set $ico_chat     <span font='Font Awesome'>&#xf27b;</span>
set $ico_chrome   <span font='Font Awesome'>&#xf268;</span>
set $ico_code     <span font='Font Awesome'>&#xf121;</span>
set $ico_document <span font='Font Awesome'>&#xf0f6;</span>
set $ico_editor   <span font='Font Awesome'>&#xf044;</span>
set $ico_email    <span font='Font Awesome'>&#xf003;</span>
set $ico_firefox  <span font='Font Awesome'>&#xf269;</span>
set $ico_folder   <span font='Font Awesome'>&#xf115;</span>
set $ico_github   <span font='Font Awesome'>&#xf09b;</span>
set $ico_hangouts <span font='Font Awesome'>&#xf10e;</span>
set $ico_menu     <span font='Font Awesome'>&#xf0c9;</span>
set $ico_monitor  <span font='Font Awesome'>&#xf26c;</span>
set $ico_music    <span font='Font Awesome'>&#xf001;</span>
set $ico_news     <span font='Font Awesome'>&#xf09e;</span>
set $ico_package  <span font='Font Awesome'>&#xf1c6;</span>
set $ico_play     <span font='Font Awesome'>&#xf01d;</span>
set $ico_table    <span font='Font Awesome'>&#xf0ce;</span>
set $ico_telegram <span font='Font Awesome'>&#xf1d9;</span>
set $ico_terminal <span font='Font Awesome'>&#xf120;</span>
set $ico_video    <span font='Font Awesome'>&#xf008;</span>
set $ico_volume   <span font='Font Awesome'>&#xf028;</span>
set $ico_whatsapp <span font='Font Awesome'>&#xf232;</span>
set $ico_window   <span font='Font Awesome'>&#xf2d0;</span>

# ----------------------------------------------------------------------------
# Workspaces
# ----------------------------------------------------------------------------

# Define o layout padrão do workspace
#workspace_layout tabbed

# labels
set $ws1 "1"
set $ws2 "2" 
set $ws3 "3" 
set $ws4 "4" 
set $ws5 "5" 
set $ws6 "6" 
set $ws7 "7" 
set $ws8 "8" 
set $ws9 "9" 
set $ws10 "10"

# switch to workspace
workspace_auto_back_and_forth yes

bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# ----------------------------------------------------------------------------
# Windows
# ----------------------------------------------------------------------------

# Windowns defaults
default_floating_border normal 1
default_border pixel 2
title_align center
# hide_edge_borders smart

# focus defaults
focus_follows_mouse no
focus_wrapping no

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

assign [app_id="telegramdesktop"]        → $ws9
assign [class="firefox"]                 → $ws2
assign [class="vlc"]                     → $ws8
for_window [class="Spotify"]                            move to workspace $ws10 

# Floating defaults
for_window [app_id="pavucontrol"]                       floating enable
for_window [app_id="mpv"]                               floating enable
for_window [app_id="nvidia-settings"]                   floating enable
for_window [app_id="qt5ct"]                             floating enable
for_window [app_id="qalculate-gtk"]                     floating enable
for_window [class="Bitwarden"]                          floating enable
for_window [class="[fF]irefox" window_role="About"]     floating enable
for_window [class="[fF]irefox" window_role="Organizer"] floating enable
for_window [class="gnuplot_qt"]                         floating enable
for_window [class="matplotlib"]                         floating enable
for_window [class="R_x11"]                              floating enable
for_window [window_role="pop-up"]                       floating enable
for_window [window_role="bubble"]                       floating enable
for_window [window_role="dialog"]                       floating enable
for_window [window_type="dialog"]                       floating enable

# ----------------------------------------------------------------------------
# Apearance
# ----------------------------------------------------------------------------

font pango:Roboto Medium 11

# class                  border  backgr  text       indicator  client_border
client.focused           $black  $black  $blue      $cyan      $black
client.unfocused         $darker $darker $darkblue  $cyan      $darker
client.focused_inactive  $dark   $dark   $darkblue  $cyan      $dark
client.urgent            $red    $red    $dark      $cyan      $red

# ----------------------------------------------------------------------------
# Status bar
# ----------------------------------------------------------------------------

bar {
  swaybar_command waybar
}

include /etc/sway/config.d/*

# Teclas de volume
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Teclas de brilho
bindsym XF86MonBrightnessUp exec light -A 3
bindsym XF86MonBrightnessDown exec light -U 3

# Teclas de mídia 
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous	

# ----------------------------------------------------------------------------
# Key bindings
# ----------------------------------------------------------------------------

# switch workspace
bindsym $mod+comma          workspace prev
bindsym $mod+period         workspace next

# urgent workspace
bindsym $mod+u              [urgent=latest] focus

# kill focused window
bindsym $mod+q kill

# border type
bindsym $mod+b              border toggle

# Focus parent
bindsym $mod+z              focus parent

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# resize window (you can also use the mouse for that)
bindsym $mod+Ctrl+h resize shrink width 1 px or 1 ppt
bindsym $mod+Ctrl+j resize grow height 1 px or 1 ppt
bindsym $mod+Ctrl+k resize shrink height 1 px or 1 ppt
bindsym $mod+Ctrl+l resize grow width 1 px or 1 ppt

# floating windows
bindsym $mod+t                      floating toggle
bindsym $mod+space                  focus mode_toggle

# session control
# reload the configuration file
bindsym $mod+Shift+r reload

# split orientation
bindsym $mod+w                      layout tabbed
bindsym $mod+semicolon              split toggle
bindsym $mod+slash                  layout toggle splitv splith

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+period           layout toggle all
# enter fullscreen mode for the focused container
bindsym $mod+F11                    fullscreen toggle

force_display_urgency_hint 400 ms
workspace_auto_back_and_forth yes
popup_during_fullscreen smart

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# ----------------------------------------------------------------------------
# Program launchers
# ----------------------------------------------------------------------------

#Telegram
bindsym $mod+o                       exec telegram-desktop
# Firefox
bindsym $mod+f                       exec firefox
# nnn
bindsym $mod+n                       exec $term -e nnn
# LibreOffice
bindsym $mod+i                       exec lowriter
bindsym $mod+Shift+i                 exec localc
# Qutebrowser
#bindsym $mod+w                       exec qutebrowser
# Terminal
bindsym $mod+Return                  exec $term
bindsym $mod+KP_Enter                exec $term
# Calculator
bindsym $mod+c                       exec env GTK_THEME=Arc-Dark qalculate-gtk
# PcManFM
bindsym $mod+a                       exec env GTK_THEME=Arc-Dark nemo

# start a program launcher 
set $menu dmenu_path | dmenu_run -b -p 'Run:' -fn 'Roboto Mono Medium-13' -sb '#5e81ac' -sf '#000000' | xargs swaymsg exec --
bindsym $mod+d exec $menu

### Idle configuration
# Example configuration:
exec swayidle -w \
         timeout 180 '$HOME/.local/bin/my_swaylock' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+e exec swaynag -t mtype -m \
  'You pressed the exit shortcut. What do you want?' \
  -b 'Poweroff' 'systemctl poweroff' \
  -b 'Reboot' 'systemctl reboot' \
  -b 'Sleep' 'systemctl suspend' \
  -b 'Logout' 'swaymsg exit'

# Shutdown/Logout menu
# set $mode_system System (l) lock, (e) exit, (s) suspend, (r) reboot, (Shift+s) Shutdown
# mode "$mode_system" {
#     bindsym l exec $locker, mode "default"
#     bindsym e exec swaymsg exit, mode "default"
#     bindsym s exec $locker && systemctl suspend, mode "default"
#     bindsym r exec systemctl reboot, mode "default"
#     bindsym Shift+s exec systemctl poweroff -i, mode "default"
# 
#     # back to normal: Enter or Escape
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+Shift+e mode "$mode_system"

# lock screen
bindsym $mod+Mod1+l exec swaylock -C $HOME/.config/swaylock/config

# Take a screenshot from the focused monitor
bindsym --to-code Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $HOME/images/screenshot/`date +%Y-%m-%d_%H:%M:%S`.png && dunstify "Screenshot from the focused monitor of saved!"

# Take a screenshot from the focused window
#  bindsym --to-code Ctrl+Print exec $HOME/.local/bin/screen.sh

# Take a screenshot (select screen)
bindsym --to-code Shift+Print exec grim -g "$(slurp)" $HOME/images/screenshot/`date +%Y-%m-%d_%H:%M:%S`.png && dunstify "Screenshot of saved!"

# Take a screenshot to clipboard (select screen)
bindsym --to-code $mod+Print exec grim -g "$(slurp)" - | wl-copy && dunstify "Screenshot of saved to clipboard!"

## For gtk applications settings
set $gnomeschema org.gnome.desktop.interface

## Gtk applications settings
exec_always {
  gsettings set $gnomeschema gtk-theme 'Arc-Dark'
  gsettings set $gnomeschema icon-theme 'Papirus-Dark'
  #gsettings set $gnomeschema cursor-theme 'Paper'
  gsettings set $gnomeschema font-name 'Roboto 12'
}

gaps inner 5
gaps outer 5
smart_gaps on
# smart_borders on

# xwayland disable
# force_display_urgency_hint 400 ms
# workspace_auto_back_and_forth yes
# popup_during_fullscreen smart
